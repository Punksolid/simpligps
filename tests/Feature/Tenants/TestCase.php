<?php

namespace Tests\Tenants;

use App\Account;
use App\Http\Middleware\LimitExpiredLicenseAccess;
use App\Http\Middleware\LimitSimoultaneousAccess;
use App\User;
use Faker\Factory;
use Hyn\Tenancy\Models\Website;
use Hyn\Tenancy\Repositories\WebsiteRepository;
use Illuminate\Foundation\Testing\TestCase as BaseTestCase;
use Tests\CreatesApplication;

abstract class TestCase extends BaseTestCase
{
    use CreatesApplication;

    public $faker = null;
    public $user;
    public $account;
    public $website;

    public function __construct(?string $name = null, array $data = [], $dataName = '')
    {
        parent::__construct($name, $data, $dataName);
        $this->faker = Factory::create();

    }

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->withoutMiddleware([LimitSimoultaneousAccess::class, LimitExpiredLicenseAccess::class]);

        $this->user = \factory(User::class)->create();
        $this->actingAs($this->user, "api");
//        $output = \Artisan::call("trm:new_account",[
//            "easyname" => $this->faker->word.str_random(5),
//            "email" => $this->user->email // lo asignamos a un email existente
//        ]);
        $this->account = $this->user->accounts()->first();
        
        
        /***WEBSITE CREATION***/
        $this->website = new Website();
        app(WebsiteRepository::class)->create($this->website);

//        dump($this->user->toArray());
    }

}
