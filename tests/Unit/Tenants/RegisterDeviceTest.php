<?php

namespace Tests\Unit\Tenants;


use App\Device;
use App\Services\RegisterDevice;
use GuzzleHttp\Client;
use GuzzleHttp\Psr7\Response;
use Mockery;
use Tests\Tenants\TestCase;

class RegisterDeviceTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * A basic unit test example.
     *
     * @return void
     */
    public function test_can_register_device_on_traccar(): void
    {

        $handler = new RegisterDevice([
            'name' => $this->faker->company
        ]);
        /**
         * Mocking so do not do a real call
         */
        /** @var Client|Mockery\Mock $guzzleClient */
        $guzzleClient = $this->mock(Client::class)->makePartial();
        $guzzleClient->shouldReceive('post')->andReturn(new Response(200,[]));
        $handler->setClient($guzzleClient);

        $device = $handler->__invoke();

        $this->assertInstanceOf(Device::class, $device);
    }
}
